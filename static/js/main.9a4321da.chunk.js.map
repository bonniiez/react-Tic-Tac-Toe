{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","winner","i","this","slice","calculateWinner","setState","handleClick","status","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"+PAoBA,SAASA,EAAOC,GACZ,OACI,4BAAQC,UAAU,SAClBC,QAASF,EAAME,SACVF,EAAMG,O,IAKbC,E,kDACF,WAAYJ,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACTC,QAAQC,MAAM,GAAGC,KAAK,MACtBC,SAAS,EACTC,OAAQ,MALE,E,wDASNC,GACR,IAAML,EAAUM,KAAKP,MAAMC,QAAQO,QAE/BP,EAAQK,IAAMG,EAAgBR,KAGlCM,KAAKG,SAAS,CACVT,QAASA,EACTG,SAAUG,KAAKP,MAAMI,UAEzBH,EAAQK,GAAKC,KAAKP,MAAMI,QAAS,IAAM,O,mCAIhCE,GAAI,IAAD,OACd,OAAO,kBAACZ,EAAD,CACPI,MAAOS,KAAKP,MAAMC,QAAQK,GAC1BT,QAAW,kBAAK,EAAKc,YAAYL,Q,+BAKjC,IACIM,EADEP,EAASI,EAAgBF,KAAKP,MAAMC,SAQ1C,OALIW,EADDP,EACU,cAAgBA,EAEhB,iBAAmBE,KAAKP,MAAMI,QAAU,IAAM,KAKzD,yBAAKR,UAAU,aACb,yBAAKA,UAAU,UAAUgB,GACzB,yBAAKhB,UAAU,aACZW,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,IAErB,yBAAKjB,UAAU,aACZW,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,IAErB,yBAAKjB,UAAU,aACZW,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,IAErB,mC,GA3DYC,IAAMC,WAmEpBC,E,uKAOF,OACE,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACf,yBAAKA,UAAU,gBALL,qBAMR,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GAfSkB,IAAMC,WAsBzB,SAASN,EAAgBR,GAWrB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAX,EAAI,EAAGA,EAAIW,EAAMC,OAAQZ,IAAK,CAAC,IAAD,cACnBW,EAAMX,GADa,GAC9Ba,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAKXG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.9a4321da.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// class Square extends React.Component {\n\n//   render() {\n//     // const [value, setX] = useState(null);\n\n//     return (\n//       <button \n//       onClick={()=> this.props.onClick()}\n//        className=\"square\">\n//         {this.props.value}\n//       </button>\n//     );\n//   }\n// }\n\n// convert Square class to function since it doesnt change state\nfunction Square(props){\n    return(\n        <button className=\"square\"\n        onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\nclass Board extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            squares:Array(9).fill(null),\n            xIsNext: true,\n            winner: null\n        };\n    }\n\n    handleClick(i){\n        const squares = this.state.squares.slice();\n\n        if (squares[i] || calculateWinner(squares)){\n            return;\n        }\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        })\n        squares[i] = this.state.xIsNext? 'X' : 'O';\n    \n\n    }\n  renderSquare(i) {\n    return <Square \n    value={this.state.squares[i]}\n    onClick = {()=> this.handleClick(i)}\n    />;\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if(winner){\n        status = \"Winner is: \" + winner;\n    }else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n    }\n\n    return (\n\n      <div className=\"container\">\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <div>\n      </div>\n      </div>\n     \n    );\n  }\n}\n\nclass Game extends React.Component {\n\n\n\n  render() {\n    const TITLE = \"REACT TIC TAC TOE\"\n\n    return (\n      <div className=\"game\">          \n        <div className=\"game-board\">\n        <div className=\"title-header\">{TITLE}</div>\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}